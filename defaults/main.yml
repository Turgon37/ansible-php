---
# defaults file for ansible-php

# Enable facts deploiement
php__facts: true

# Choose the monitoring backend to configure (if available)
# php__monitoring:


### INSTALL CONFIGURATION
# ---------------------------------------
# The major PHP version to install (default to the distribution's latest)
#  in 5.6, 7.0
# php__version:

# Choose the source of PHPs packages
# in 'os'
php__packages_source: os

# The version of the PHP package (full minor version)
php__packages_version: latest

# Install and manage 'cli' resources
php__cli: false

# Install and manage PHP module for Apache2 resources
php__apachemod: false

# Install and manage PHP FPM resources
php__fpm: false

# Configuration root directory, differ from PHP versions
# php__configuration_directory:

# Configuration directories for cli SAPI
php__cli_configuration_directory: '{{ php__configuration_directory }}/cli'
php__cli_include_configuration_directory: '{{ php__cli_configuration_directory }}/conf.d'

# Configuration directories for FPM SAPI
php__fpm_configuration_directory: '{{ php__configuration_directory }}/fpm'
php__fpm_include_configuration_directory: '{{ php__fpm_configuration_directory }}/conf.d'

# Configuration directories for apachemod SAPI
php__apachemod_configuration_directory: '{{ php__configuration_directory }}/apache2'


### SERVICE CONFIGURATION
# ---------------------------------------

# The name of the systemd FPM unit
# php__fpm_service_name:

# If true the FPM service will be started and enabled
php__fpm_service_enabled: true

# If this is set to true,
# ansible will automatically restart FPM daemon on changes
# if not it will be simply marked as 'to be restarted'
php__fpm_service_restartable: true

# Path to the must restart stamp file
php__fpm_service_restart_stamp_file: /var/local/php-fpm-must-restart-stamp

# FPM configuration file
php__fpm_service_configuration_file: '{{ php__fpm_configuration_directory }}/php-fpm.conf'

# Command to use for template validation
php__fpm_service_configuration_validator: '{{ php__fpm_service_executable }} --nodaemonize --test --fpm-config %s'


### PHP CONFIGURATION
# ---------------------------------------

## List of extensions to enable for all SAPIs.

# Default extensions to enable for all SAPI
php__extensions_default: {}

# Intended to be used at global inventory level
php__extensions_global: {}

# This variable is intended to be used in a host inventory group of Ansible
# (only one host group is supported).
php__extensions_group: {}

# This variable is intended to be used in the inventory of hosts.
php__extensions_host: {}

# Combine all enabled extensions
php__extensions: '{{ php__extensions_global
    |combine(php__extensions_group)
    |combine(php__extensions_host)
  }}'


## List of extensions to enable for cli SAPI.

# Intended to be used at global inventory level
php__cli_extensions_global: {}

# This variable is intended to be used in a host inventory group of Ansible
# (only one host group is supported).
php__cli_extensions_group: {}

# This variable is intended to be used in the inventory of hosts.
php__cli_extensions_host: {}

# Combine all enabled extensions
php__cli_extensions: '{{ php__cli_extensions_global
    |combine(php__cli_extensions_group)
    |combine(php__cli_extensions_host)
  }}'

## List of extensions to enable for FPM SAPI.

# Intended to be used at global inventory level
php__fpm_extensions_global: {}

# This variable is intended to be used in a host inventory group of Ansible
# (only one host group is supported).
php__fpm_extensions_group: {}

# This variable is intended to be used in the inventory of hosts.
php__fpm_extensions_host: {}

# Combine all enabled extensions
php__fpm_extensions: '{{ php__fpm_extensions_global
    |combine(php__fpm_extensions_group)
    |combine(php__fpm_extensions_host)
  }}'


## List of extensions to enable for apachemod SAPI.

# Intended to be used at global inventory level
php__apachemod_extensions_global: {}

# This variable is intended to be used in a host inventory group of Ansible
# (only one host group is supported).
php__apachemod_extensions_group: {}

# This variable is intended to be used in the inventory of hosts.
php__apachemod_extensions_host: {}

# Combine all enabled extensions
php__apachemod_extensions: '{{ php__apachemod_extensions_global
    |combine(php__apachemod_extensions_group)
    |combine(php__apachemod_extensions_host)
  }}'
