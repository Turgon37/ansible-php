---
# defaults file for ansible-php

# Enable facts deploiement
php__facts: true

# Choose the monitoring backend to configure (if available)
# php__monitoring:


### INSTALL CONFIGURATION
# ---------------------------------------
# The major PHP version to install (default to the distribution's latest)
#  in 5.6, 7.0
# php__version:

# Choose the source of PHPs packages
# in 'os'
php__packages_source: os

# The version of the PHP package (full minor version)
php__packages_version: latest

# Install and manage 'cli' resources
php__cli: false

# Install and manage PHP module for Apache2 resources
php__apachemod: false

# Install and manage PHP FPM resources
php__fpm: false

# Configuration root directory, differ from PHP versions
# php__configuration_directory:

# Configuration directories for cli SAPI
php__cli_configuration_directory: '{{ php__configuration_directory }}/cli'
php__cli_include_configuration_directory: '{{ php__cli_configuration_directory }}/conf.d'

# Configuration directories for FPM SAPI
php__fpm_configuration_directory: '{{ php__configuration_directory }}/fpm'
php__fpm_include_configuration_directory: '{{ php__fpm_configuration_directory }}/conf.d'
php__fpm_pool_configuration_directory: '{{ php__fpm_configuration_directory }}/pool.d'

# Configuration directories for apachemod SAPI
php__apachemod_configuration_directory: '{{ php__configuration_directory }}/apache2'
php__apachemod_include_configuration_directory: '{{ php__apachemod_configuration_directory }}/conf.d'


### SERVICE CONFIGURATION
# ---------------------------------------
# The user and group that FPM will run as
php__fpm_service_user: www-data
php__fpm_service_group: www-data

# The name of the systemd FPM unit
# php__fpm_service_name:

# If true the FPM service will be started and enabled
php__fpm_service_enabled: true

# If this is set to true,
# ansible will automatically restart FPM daemon on changes
# if not it will be simply marked as 'to be restarted'
php__fpm_service_restartable: true

# Path to the must restart stamp file
php__fpm_service_restart_stamp_file: /var/local/php-fpm-must-restart-stamp

# FPM configuration file
php__fpm_service_configuration_file: '{{ php__fpm_configuration_directory }}/php-fpm.conf'

# Command to use for template validation
php__fpm_service_configuration_validator: '{{ php__fpm_service_executable }} --nodaemonize --test --fpm-config %s'

# Path to systemd override directory
php__fpm_service_systemd_override_options_directory:
  '/etc/systemd/system/{{ php__fpm_service_name }}.service.d'

# Location of the FPM pidfile
# php__fpm_service_pidfile:

# Directory where to put custom script for PHP
php__custom_scripts_directory: /opt/php-scripts

# Define here the name of ansible handler to notify on apachemod configuration changes
# php__apachemod_service_handler:

# Define here the name of apache service to restart on apachemod configuration changes
# /!\ take care that the service will be restarted without any condition
# php__apachemod_service_name:


### PHP CONFIGURATION
# ---------------------------------------

## List of extensions to enable for all SAPIs.

# Default extensions to enable for all SAPI
php__extensions_default: {}

# Intended to be used at global inventory level
php__extensions_global: {}

# This variable is intended to be used in a host inventory group of Ansible
# (only one host group is supported).
php__extensions_group: {}

# This variable is intended to be used in the inventory of hosts.
php__extensions_host: {}

# Combine all enabled extensions
php__extensions: '{{ php__extensions_global
    |combine(php__extensions_group)
    |combine(php__extensions_host)
  }}'


## List of extensions to enable for cli SAPI.

# Intended to be used at global inventory level
php__cli_extensions_global: {}

# This variable is intended to be used in a host inventory group of Ansible
# (only one host group is supported).
php__cli_extensions_group: {}

# This variable is intended to be used in the inventory of hosts.
php__cli_extensions_host: {}

# Combine all enabled extensions
php__cli_extensions: '{{ php__cli_extensions_global
    |combine(php__cli_extensions_group)
    |combine(php__cli_extensions_host)
  }}'

## List of extensions to enable for FPM SAPI.

# Intended to be used at global inventory level
php__fpm_extensions_global: {}

# This variable is intended to be used in a host inventory group of Ansible
# (only one host group is supported).
php__fpm_extensions_group: {}

# This variable is intended to be used in the inventory of hosts.
php__fpm_extensions_host: {}

# Combine all enabled extensions
php__fpm_extensions: '{{ php__fpm_extensions_global
    |combine(php__fpm_extensions_group)
    |combine(php__fpm_extensions_host)
  }}'


## List of extensions to enable for apachemod SAPI.

# Intended to be used at global inventory level
php__apachemod_extensions_global: {}

# This variable is intended to be used in a host inventory group of Ansible
# (only one host group is supported).
php__apachemod_extensions_group: {}

# This variable is intended to be used in the inventory of hosts.
php__apachemod_extensions_host: {}

# Combine all enabled extensions
php__apachemod_extensions: '{{ php__apachemod_extensions_global
    |combine(php__apachemod_extensions_group)
    |combine(php__apachemod_extensions_host)
  }}'


### PHP FPM CONFIGURATION
# ---------------------------------------

# Error log file
# If it's set to "syslog", log is sent to syslogd instead of being written
# in a local file.
# php__fpm_error_log:

# syslog_facility is used to specify what type of program is logging the
# message. This lets syslogd specify that messages from different facilities
# will be handled differently
php__fpm_syslog_facility: daemon

# syslog_ident is prepended to every message. If you have multiple FPM
# instances running on the same server, you can change the default value
# which must suit common needs.
php__fpm_syslog_ident: php-fpm

# Log level
# Possible Values: alert, error, warning, notice, debug
php__fpm_log_level: notice

# If this number of child processes exit with SIGSEGV or SIGBUS within the time
# interval set by emergency_restart_interval then FPM will restart. A value
# of '0' means 'Off'.
php__fpm_emergency_restart_threshold: 0

# Interval of time used by emergency_restart_interval to determine when
# a graceful restart will be initiated.  This can be useful to work around
# accidental corruptions in an accelerator's shared memory.
# Available Units: s(econds), m(inutes), h(ours), or d(ays)
php__fpm_emergency_restart_interval: 0

# Time limit for child processes to wait for a reaction on signals from master.
# Available units: s(econds), m(inutes), h(ours), or d(ays)
php__fpm_process_control_timeout: 0

# The maximum number of processes FPM will fork. This has been design to control
# the global number of processes when using dynamic PM within a lot of pools.
# Note: A value of 0 indicates no limit
php__fpm_process_max: 0

# Specify the nice(2) priority to apply to the master process (only if set)
# The value can vary from -19 (highest priority) to 20 (lower priority)
# Note: - It will only work if the FPM master process is launched as root
#       - The pool process will inherit the master process priority
#         unless it specified otherwise
# php__fpm_process_priority:

# Set open file descriptor rlimit for the master process.
# php__fpm_rlimit_files:

# Set max core size rlimit for the master process.
# php__fpm_rlimit_core:

# Specify the event mechanism FPM will use.
# in select     (any POSIX os)
#    poll       (any POSIX os)
#    epoll      (linux >= 2.5.44)
# php__fpm_events_mechanism:

# When FPM is build with systemd integration, specify the interval,
# in second, between health report notification to systemd.
# Available Units: s(econds), m(inutes), h(ours)
#   Default Unit: seconds
php__fpm_systemd_interval: 10

# Remove undefined pools
php__fpm_purge_pools: true

# Default list of pool
php__fpm_pools_default:
  www:
    listen: /run/php/php7.0-fpm.sock
    pm: dynamic

# This variable is intended to be used in Ansibleâ€™s global inventory.
php__fpm_pools_global: {}

# This variable is intended to be used in a host inventory group of Ansible
# (only one host group is supported).
php__fpm_pools_group: {}

# This variable is intended to be used in the inventory of hosts.
php__fpm_pools_host: {}

# Combned vhosts dicts
php__fpm_pools: '{{ php__fpm_pools_default
    |combine(php__fpm_pools_global)
    |combine(php__fpm_pools_group)
    |combine(php__fpm_pools_host)
  }}'

# List of default value for all pools
php__fpm_defaut_pool:
  user: '{{ php__fpm_service_user }}'
  group: '{{ php__fpm_service_group }}'

  # The address on which to accept FastCGI requests.
  # Valid syntaxes are:
  #   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on
  #                           a specific port;
  #   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on
  #                           a specific port;
  #   'port'                 - to listen on a TCP socket to all addresses
  #                           (IPv6 and IPv4-mapped) on a specific port;
  #   '/path/to/unix/socket' - to listen on a unix socket.
  # listen:

  # Set listen(2) backlog.
  listen_backlog: 511

  # Set permissions for unix socket, if one is used. In Linux, read/write
  # permissions must be set in order to allow connections from a web server. Many
  # BSD-derived systems allow connections regardless of permissions.
  # Default Values: user and group are set as the running user
  #                 mode is set to 0660
  listen_owner: '{{ php__fpm_service_user }}'
  listen_group: '{{ php__fpm_service_group }}'
  listen_mode: '0660'

  # When POSIX Access Control Lists are supported you can set them using
  # these options, value is a comma separated list of user/group names.
  # When set, listen.owner and listen.group are ignored
  # listen_acl_users:
  # listen_acl_groups:

  # List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.
  # Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original
  # PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address
  # must be separated by a comma. If this value is left blank, connections will be
  # accepted from any ip address.
  # Default Value: any
  listen_allowed_clients:

  # Specify the nice(2) priority to apply to the pool processes (only if set)
  # Note: - It will only work if the FPM master process is launched as root
  #  - The pool processes will inherit the master process priority
  #    unless it specified otherwise
  # process_priority:

  # Set the process dumpable flag (PR_SET_DUMPABLE prctl) even if the process user
  # or group is differrent than the master process user. It allows to create process
  # core dump and ptrace the process for the pool user.
  process_dumpable: false

  # Choose how the process manager will control the number of child processes.
  # Possible Values:
  #   static  - a fixed number (pm.max_children) of child processes;
  #   dynamic - the number of child processes are set dynamically based on the
  #             following directives. With this process management, there will be
  #             always at least 1 children.
  #             pm.max_children      - the maximum number of children that can
  #                                    be alive at the same time.
  #             pm.start_servers     - the number of children created on startup.
  #             pm.min_spare_servers - the minimum number of children in 'idle'
  #                                    state (waiting to process). If the number
  #                                    of 'idle' processes is less than this
  #                                    number then some children will be created.
  #             pm.max_spare_servers - the maximum number of children in 'idle'
  #                                    state (waiting to process). If the number
  #                                    of 'idle' processes is greater than this
  #                                    number then some children will be killed.
  #  ondemand - no children are created at startup. Children will be forked when
  #             new requests will connect. The following parameter are used:
  #             pm.max_children           - the maximum number of children that
  #                                         can be alive at the same time.
  #             pm.process_idle_timeout   - The number of seconds after which
  #                                         an idle process will be killed.
  # pm:

  # The number of child processes to be created when pm is set to 'static' and the
  # maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
  # This value sets the limit on the number of simultaneous requests that will be
  # served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
  pm_max_children: 5

  # The number of child processes created on startup.
  # Default Value: min_spare_servers + (max_spare_servers - min_spare_servers) / 2
  pm_start_servers: 2

  # The desired minimum number of idle server processes.
  pm_min_spare_servers: 1

  # The desired maximum number of idle server processes.
  pm_max_spare_servers: 3

  # The number of seconds after which an idle process will be killed.
  pm_process_idle_timeout: 10s

  # The number of requests each child process should execute before respawning.
  # This can be useful to work around memory leaks in 3rd party libraries.
  pm_max_requests: 0

  # The URI to view the FPM status page. If this value is not set, no URI will be
  # recognized as a status page. It shows the following informations:
  pm_status_path: "{{ (php__monitoring is defined)|ternary('/fpm-status', omit) }}"
